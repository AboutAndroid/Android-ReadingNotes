一个好的网络请求框架是什么样的？

1. Retrofit + Okhttp + RxJava 目前最流行的网络架构，使用这个进行封装

2. 开发者需要传入的参数
    (1) url
    (2) 参数 参数分为 公共参数 如：token、channelId，封装进 Headers 或者 Api中，免去每次调用时都传
                    动态参数 开发者动态获取传入
    (3) 返回类型 返回类型做统一处理 通过BaseResp<T> 封装

3. 统一返回 code 处理，比如碰到 unlogin(未登录)，应该由框架自动判断并作出处理，不应该由开发者手动判断处理

4. 统一异常处理

5. 缓存模式的切换

6. token 丢失处理


参考：
https://github.com/hongyangAndroid/okhttputils
https://github.com/jeasonlzy/okhttp-OkGo
http://blog.csdn.net/qq_17766199/article/details/53186874
http://www.jianshu.com/p/b1979c25634f
http://blog.piasy.com/tags/#安卓开发
https://github.com/liuguangqiang/AndroidMan/blob/master/posts/Retrofit2%2BRxJava%2BLoganSquare%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.md
https://github.com/yanzhenjie/NoHttp
https://github.com/drakeet/Meizhi
https://github.com/JakeWharton/u2020
https://github.com/JakeWharton/retrofit2-rxjava2-adapter
https://github.com/Piasy/AndroidTDDBootStrap
https://github.com/liuguangqiang/Idaily
https://shadowzwy.github.io/2016/11/17/Retrofit-2.0-%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E6%A6%82%E8%BF%B0.html



解决方案：
1. 公共参数
    公司服务器取 token 只能通过参数去，不能通过 Headers 取，
    将 token 封装进 Api，Retrofit 没有提供 ???
    可以通过设置OKHttp的拦截来实现，但是这样无法保证OKHttpClient的单例

    创建一个单例的 map 使用前先 clear 然后放入 token，封装进 getTokenMap()

2. _Cookie 丢失

3. baseUrl & api
    公司服务器有 5 个 HOST，使用静态内部类的单例，创建 5 个 Retrofit，
    底层公用一个 OkHttpClient(枚举单例)，
    将他们按照使用的频繁程度分为这两组，进行懒加载（因为懒加载放弃了枚举单例的使用）。

    使用相同的方法将 Api.class 按照业务逻辑分类，进行懒加载。

4. _缓存

    在线缓存时间 30 秒，30 秒内请求返回缓存数据 + 离线缓存
    有些接口不应该有缓存，比如：实时金价、登录

    Cache-Control 无法实现 post 缓存

    自己写缓存 参考NoHttp

5. _token过期

    token 过期？ 被别人顶下去？






